{"mappings":"AAAA,MAAM,4CAAW,CAAC,MAAK,UAAY;IAC/B,IAAG,OAAO,SAAQ,OAAO,SAAU,MAAM,IAAI,UAAU,2CAA2C;IAClG,IAAG,OAAO,SAAQ,UAAU,OAAO,0CAAS;WAAI;KAAK,EAAC;WAAI;KAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,OAAM,KAAI,QAAM,EAAE,CAAC,GAAK;YAAC;YAAM;YAAI,MAAM,IAAI,CAAC;SAAI;IAC5H,MAAM,QAAQ,EAAE;IAChB,IAAG,KAAK,MAAM,GAAC,QAAQ,MAAM,EAAE,MAAM,IAAI,CAAC;QAAC,QAAQ,MAAM;QAAC,KAAK,MAAM,GAAC,QAAQ,MAAM;KAAC;IACrF,IAAI,IAAI,IAAE,GAAE,IAAE,QAAQ,MAAM,EAAC,IAAK;QAC9B,IAAI,QAAQ,QAAQ;QACpB,MAAM,IAAI,CAAC,EAAE,KAAG,OAAO,CAAC,EAAE,IAAI,IAAE,QAAQ,MAAM,CAAE;YAC5C,WAAW;gBAAC;gBAAE;gBAAE,EAAE;aAAC;YACnB,MAAM,CAAC,EAAE,GAAG,EAAE;YACd,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;QAC/B;QACA,IAAG,QAAQ,MAAM,IAAI,CAAC;IAC1B;IACA,OAAO;AACX;AACA,MAAM,4CAAa,CAAC,QAAO,QAAU;IACjC,MAAM,SAAS,MAAM,MAAM,CAAC,CAAC,QAAO,CAAC,OAAM,QAAO,UAAQ,EAAE,CAAC,GAAK;QAC1D,OAAO,MAAM,CAAC,OAAM,WAAU;QAC9B,OAAO;IACX,GAAG;WAAI;KAAO;IAClB,OAAO,OAAO,WAAU,WAAW,OAAO,IAAI,CAAC,MAAM,MAAM;AAC/D;AACA,MAAM,4CAAa;cAAE;gBAAU;AAAW","sources":["index.js"],"sourcesContent":["const getDelta = (base,current) => {\r\n    if(typeof(base)!==typeof(current)) throw new TypeError(\"getDelta arguments must be of same type\");\r\n    if(typeof(base)===\"string\") return getDelta([...base],[...current]).map(([start,end,chars=[]]) => [start,end,chars.join(\"\")])\r\n    const delta = [];\r\n    if(base.length>current.length) delta.push([current.length,base.length-current.length]);\r\n    for(let i=0;i<current.length;i++) {\r\n        let splice, count = 0;\r\n        while(base[i]!==current[i] && i<current.length) {\r\n            splice ||= [i,0,[]];\r\n            splice[1] = ++count;\r\n            splice[2].push(current[i++]);\r\n        }\r\n        if(splice) delta.push(splice);\r\n    }\r\n    return delta;\r\n}\r\nconst applyDelta = (target,delta) => {\r\n    const result = delta.reduce((target,[start,length,changes=[]]) => {\r\n            target.splice(start,length,...changes);\r\n            return target;\r\n        }, [...target]);\r\n    return typeof(target)===\"string\" ? result.join(\"\") : result;\r\n}\r\nconst LittleDiff = { getDelta, applyDelta }\r\nexport {getDelta,applyDelta, LittleDiff}"],"names":[],"version":3,"file":"little-diff.js.map"}